/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 Artics.glb --transform
*/

import React, { useRef } from "react"
import { OrbitControls, useGLTF, useScroll } from "@react-three/drei"
import { useFrame } from "@react-three/fiber"

export function Model(props) {
  const scrollControl = useScroll()
  // useFrame(() => {
  //   console.log(scrollControl.offset)
  // })

  const { nodes, materials } = useGLTF("/models/Artics-transformed.glb")
  return (
    <>
      <OrbitControls />

      <group {...props} dispose={null}>
        <mesh geometry={nodes.Cylinders.geometry} material={materials.ArticsMaterial} />
        <mesh geometry={nodes.Pads.geometry} material={materials.ArticsMaterial} />
        <mesh geometry={nodes.Supports.geometry} material={materials.ArticsMaterial} />
        <mesh geometry={nodes.Cover_Right.geometry} material={materials.ArticsMaterial} />
        <mesh geometry={nodes.Headband_Inner.geometry} material={materials.ArticsMaterial} />
        <mesh geometry={nodes.Battery.geometry} material={materials.Battery_Texture} />
        <mesh
          geometry={nodes.Inside_1.geometry}
          material={materials.Blue_Metallic}
          position={[0.01, 0, 0]}
        />
        <mesh
          geometry={nodes.Inside_2.geometry}
          material={materials.Orage_Mertallic}
          position={[0.011, 0, 0]}
        />
        <mesh
          geometry={nodes.Headband_outter.geometry}
          material={materials.ArticsMaterial_Headband}
        />
        <mesh geometry={nodes.Neon.geometry} material={materials.Material} />
        <mesh geometry={nodes.Cover_Left.geometry} material={materials.ArticsMaterial_Headband} />
        <mesh
          geometry={nodes.Sounds.geometry}
          material={materials.Orange_Plastic}
          rotation={[0, 0, 0.004]}
        />
      </group>
    </>
  )
}

useGLTF.preload("/models/Artics-transformed.glb")
